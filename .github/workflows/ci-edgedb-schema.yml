name: ci-ifc-edgedb-schema

on:
  push:
    paths:
      - src/server/schema/**
      - .github/workflows/ci-edgedb-schema.yml
env:
  WORKDIR: src/server/schema/partial_schemas/db/basic
  CON_PARAMS: --tls-security=insecure -P 5656
  SERVER_VERSION: 2.1

jobs:
  test:
    runs-on: ubuntu-latest
    name: EdgeDB schema - "${{ matrix.WORKDIR.name }}"
    services:
      edgedb:
        image: edgedb/edgedb:2.1
        env:
          EDGEDB_SERVER_SECURITY: insecure_dev_mode
          EDGEDB_SERVER_LOG_LEVEL: debug
        ports:
          - 5656:5656
    strategy:
      fail-fast: false
      matrix:
        WORKDIR: [
          { name: basic, dir: "src/server/schema/partial_schemas/db/basic", use_python: "false" },
#          { name: complete, dir: "src/server/schema/complete_schema", use_python: false }
          { name: stepwise, dir: "src/server/schema/complete_in_steps/complete_in_steps.py", use_python: "true" }
        ]
    env:
      EDGEDB_DATABASE: "${{ matrix.WORKDIR.name }}"
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2  # https://github.com/conda-incubator/setup-miniconda
        if: ${{ matrix.WORKDIR.use_python == 'true' }}
        with:
          activate-environment: ifcdb
          python-version: 3.10.5
          channel-priority: strict
          environment-file: environment.dev.yml
          auto-update-conda: true
      - uses: edgedb/setup-edgedb@v1
      - name: Install python package
        if: ${{ matrix.WORKDIR.use_python == 'true' }}
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps --ignore-installed .
      - name: EdgeDB Perform Migrations using python
        if: ${{ matrix.WORKDIR.use_python == 'true' }}
        shell: bash -l {0}
        run: |
          python ${{ matrix.WORKDIR.dir }}
      - name: EdgeDB Clear previous migration and Create a new database
        if: ${{ matrix.WORKDIR.use_python == 'false' }}
        run: |
          rm -rf ./dbschema/migrations
          edgedb $CON_PARAMS database create ${{ matrix.WORKDIR.name }}
        working-directory: ${{ matrix.WORKDIR.dir }}
      - name: EdgeDB Migrate create
        if: ${{ matrix.WORKDIR.use_python == 'false' }}
        run: |
          edgedb $CON_PARAMS migration create --non-interactive
        working-directory: ${{ matrix.WORKDIR.dir }}
      - name: EdgeDB Apply Migration
        if: ${{ matrix.WORKDIR.use_python == 'false' }}
        run: |
          edgedb $CON_PARAMS migration apply
        working-directory: ${{ matrix.WORKDIR.dir }}
      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
      - name: Make zip file from the final migrations and schema
        run: |
          zip -r ${{ matrix.WORKDIR.name }}.zip ${{ matrix.WORKDIR.dir }}
      - name: Upload Zip file to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.WORKDIR.name }}.zip
          asset_name: IFC-schema-${{ matrix.WORKDIR.name }}.zip
          tag: "IFC-schema-${{ matrix.WORKDIR.name }}"
          overwrite: true
          body: "IFC-schema-${{ matrix.WORKDIR.name }}"
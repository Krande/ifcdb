module default {


    type IfcAbsorbedDoseMeasure {
        required property `IfcAbsorbedDoseMeasure` -> float64;
    }

    type IfcAccelerationMeasure {
        required property `IfcAccelerationMeasure` -> float64;
    }

    type IfcAmountOfSubstanceMeasure {
        required property `IfcAmountOfSubstanceMeasure` -> float64;
    }

    type IfcAngularVelocityMeasure {
        required property `IfcAngularVelocityMeasure` -> float64;
    }

    type IfcAreaDensityMeasure {
        required property `IfcAreaDensityMeasure` -> float64;
    }

    type IfcAreaMeasure {
        required property `IfcAreaMeasure` -> float64;
    }

    type IfcBinary {
        required property `IfcBinary` -> bytes;
    }

    type IfcBoolean {
        required property `IfcBoolean` -> bool;
    }

    abstract type IfcBoundaryCondition  {
        property Name -> str;
    }

    type IfcBoxAlignment {
        required property `IfcBoxAlignment` -> str;
    }

    type IfcCardinalPointReference {
        required property `IfcCardinalPointReference` -> int64;
    }

    type IfcComplexNumber {
        required property `IfcComplexNumber` -> array<float64>{
            constraint expression on (len(__subject__) = 1 or len(__subject__) = 2)
        };
    }

    type IfcCompoundPlaneAngleMeasure {
        required property `IfcCompoundPlaneAngleMeasure` -> array<int64>{
            constraint expression on (len(__subject__) = 3 or len(__subject__) = 4)
        };
    }

    abstract type IfcConnectionGeometry  {
    }

    type IfcContextDependentMeasure {
        required property `IfcContextDependentMeasure` -> float64;
    }

    abstract type IfcCoordinateReferenceSystem  {
        required property Name -> str;
        property Description -> str;
        property GeodeticDatum -> str;
        property VerticalDatum -> str;
    }

    type IfcCountMeasure {
        required property `IfcCountMeasure` -> int64;
    }

    type IfcCurvatureMeasure {
        required property `IfcCurvatureMeasure` -> float64;
    }

    type IfcDate {
        required property `IfcDate` -> str;
    }

    type IfcDateTime {
        required property `IfcDateTime` -> str;
    }

    type IfcDayInMonthNumber {
        required property `IfcDayInMonthNumber` -> int64;
    }

    type IfcDayInWeekNumber {
        required property `IfcDayInWeekNumber` -> int64;
    }

    type IfcDescriptiveMeasure {
        required property `IfcDescriptiveMeasure` -> str;
    }

    type IfcDimensionCount {
        required property `IfcDimensionCount` -> int64;
    }

    type IfcDimensionalExponents  {
        required property LengthExponent -> int64;
        required property MassExponent -> int64;
        required property TimeExponent -> int64;
        required property ElectricCurrentExponent -> int64;
        required property ThermodynamicTemperatureExponent -> int64;
        required property AmountOfSubstanceExponent -> int64;
        required property LuminousIntensityExponent -> int64;
    }

    type IfcDoseEquivalentMeasure {
        required property `IfcDoseEquivalentMeasure` -> float64;
    }

    type IfcDuration {
        required property `IfcDuration` -> str;
    }

    type IfcDynamicViscosityMeasure {
        required property `IfcDynamicViscosityMeasure` -> float64;
    }

    type IfcElectricCapacitanceMeasure {
        required property `IfcElectricCapacitanceMeasure` -> float64;
    }

    type IfcElectricChargeMeasure {
        required property `IfcElectricChargeMeasure` -> float64;
    }

    type IfcElectricConductanceMeasure {
        required property `IfcElectricConductanceMeasure` -> float64;
    }

    type IfcElectricCurrentMeasure {
        required property `IfcElectricCurrentMeasure` -> float64;
    }

    type IfcElectricResistanceMeasure {
        required property `IfcElectricResistanceMeasure` -> float64;
    }

    type IfcElectricVoltageMeasure {
        required property `IfcElectricVoltageMeasure` -> float64;
    }

    type IfcEnergyMeasure {
        required property `IfcEnergyMeasure` -> float64;
    }

    abstract type IfcExternalInformation  {
    }

    abstract type IfcExternalReference  {
        property Location -> str;
        property Identification -> str;
        property Name -> str;
    }

    type IfcFontStyle {
        required property `IfcFontStyle` -> str;
    }

    type IfcFontVariant {
        required property `IfcFontVariant` -> str;
    }

    type IfcFontWeight {
        required property `IfcFontWeight` -> str;
    }

    type IfcForceMeasure {
        required property `IfcForceMeasure` -> float64;
    }

    type IfcFrequencyMeasure {
        required property `IfcFrequencyMeasure` -> float64;
    }

    type IfcGloballyUniqueId {
        required property `IfcGloballyUniqueId` -> str;
    }

    type IfcHeatFluxDensityMeasure {
        required property `IfcHeatFluxDensityMeasure` -> float64;
    }

    type IfcHeatingValueMeasure {
        required property `IfcHeatingValueMeasure` -> float64;
    }

    type IfcIdentifier {
        required property `IfcIdentifier` -> str;
    }

    type IfcIlluminanceMeasure {
        required property `IfcIlluminanceMeasure` -> float64;
    }

    type IfcInductanceMeasure {
        required property `IfcInductanceMeasure` -> float64;
    }

    type IfcInteger {
        required property `IfcInteger` -> int64;
    }

    type IfcIntegerCountRateMeasure {
        required property `IfcIntegerCountRateMeasure` -> int64;
    }

    type IfcIonConcentrationMeasure {
        required property `IfcIonConcentrationMeasure` -> float64;
    }

    type IfcIsothermalMoistureCapacityMeasure {
        required property `IfcIsothermalMoistureCapacityMeasure` -> float64;
    }

    type IfcKinematicViscosityMeasure {
        required property `IfcKinematicViscosityMeasure` -> float64;
    }

    type IfcLabel {
        required property `IfcLabel` -> str;
    }

    type IfcLanguageId {
        required property `IfcLanguageId` -> str;
    }

    type IfcLengthMeasure {
        required property `IfcLengthMeasure` -> float64;
    }

    type IfcLightDistributionData  {
        required property MainPlaneAngle -> float64;
        required property SecondaryPlaneAngle -> tuple<float64>;
        required property LuminousIntensity -> tuple<float64>;
    }

    type IfcLinearForceMeasure {
        required property `IfcLinearForceMeasure` -> float64;
    }

    type IfcLinearMomentMeasure {
        required property `IfcLinearMomentMeasure` -> float64;
    }

    type IfcLinearStiffnessMeasure {
        required property `IfcLinearStiffnessMeasure` -> float64;
    }

    type IfcLinearVelocityMeasure {
        required property `IfcLinearVelocityMeasure` -> float64;
    }

    type IfcLogical {
        required property `IfcLogical` -> bool;
    }

    type IfcLuminousFluxMeasure {
        required property `IfcLuminousFluxMeasure` -> float64;
    }

    type IfcLuminousIntensityDistributionMeasure {
        required property `IfcLuminousIntensityDistributionMeasure` -> float64;
    }

    type IfcLuminousIntensityMeasure {
        required property `IfcLuminousIntensityMeasure` -> float64;
    }

    type IfcMagneticFluxDensityMeasure {
        required property `IfcMagneticFluxDensityMeasure` -> float64;
    }

    type IfcMagneticFluxMeasure {
        required property `IfcMagneticFluxMeasure` -> float64;
    }

    type IfcMassDensityMeasure {
        required property `IfcMassDensityMeasure` -> float64;
    }

    type IfcMassFlowRateMeasure {
        required property `IfcMassFlowRateMeasure` -> float64;
    }

    type IfcMassMeasure {
        required property `IfcMassMeasure` -> float64;
    }

    type IfcMassPerLengthMeasure {
        required property `IfcMassPerLengthMeasure` -> float64;
    }

    abstract type IfcMaterialDefinition  {
    }

    abstract type IfcMaterialUsageDefinition  {
    }

    type IfcModulusOfElasticityMeasure {
        required property `IfcModulusOfElasticityMeasure` -> float64;
    }

    type IfcModulusOfLinearSubgradeReactionMeasure {
        required property `IfcModulusOfLinearSubgradeReactionMeasure` -> float64;
    }

    type IfcModulusOfRotationalSubgradeReactionMeasure {
        required property `IfcModulusOfRotationalSubgradeReactionMeasure` -> float64;
    }

    type IfcModulusOfSubgradeReactionMeasure {
        required property `IfcModulusOfSubgradeReactionMeasure` -> float64;
    }

    type IfcMoistureDiffusivityMeasure {
        required property `IfcMoistureDiffusivityMeasure` -> float64;
    }

    type IfcMolecularWeightMeasure {
        required property `IfcMolecularWeightMeasure` -> float64;
    }

    type IfcMomentOfInertiaMeasure {
        required property `IfcMomentOfInertiaMeasure` -> float64;
    }

    type IfcMonetaryMeasure {
        required property `IfcMonetaryMeasure` -> float64;
    }

    type IfcMonetaryUnit  {
        required property Currency -> str;
    }

    type IfcMonthInYearNumber {
        required property `IfcMonthInYearNumber` -> int64;
    }

    type IfcNonNegativeLengthMeasure {
        required property `IfcNonNegativeLengthMeasure` -> float64;
    }

    type IfcNormalisedRatioMeasure {
        required property `IfcNormalisedRatioMeasure` -> float64;
    }

    type IfcNullStyle {
        required property IfcNullStyle -> str {
            constraint one_of ('NULL');
        };
    }

    type IfcNumericMeasure {
        required property `IfcNumericMeasure` -> int64;
    }

    abstract type IfcObjectPlacement  {
    }

    type IfcPHMeasure {
        required property `IfcPHMeasure` -> float64;
    }

    type IfcParameterValue {
        required property `IfcParameterValue` -> float64;
    }

    abstract type IfcPhysicalQuantity  {
        required property Name -> str;
        property Description -> str;
    }

    type IfcPlanarForceMeasure {
        required property `IfcPlanarForceMeasure` -> float64;
    }

    type IfcPlaneAngleMeasure {
        required property `IfcPlaneAngleMeasure` -> float64;
    }

    type IfcPositiveInteger {
        required property `IfcPositiveInteger` -> int64;
    }

    type IfcPositiveLengthMeasure {
        required property `IfcPositiveLengthMeasure` -> float64;
    }

    type IfcPositivePlaneAngleMeasure {
        required property `IfcPositivePlaneAngleMeasure` -> float64;
    }

    type IfcPositiveRatioMeasure {
        required property `IfcPositiveRatioMeasure` -> float64;
    }

    type IfcPowerMeasure {
        required property `IfcPowerMeasure` -> float64;
    }

    type IfcPresentableText {
        required property `IfcPresentableText` -> str;
    }

    abstract type IfcPresentationItem  {
    }

    abstract type IfcPresentationStyle  {
        property Name -> str;
    }

    type IfcPressureMeasure {
        required property `IfcPressureMeasure` -> float64;
    }

    abstract type IfcPropertyAbstraction  {
    }

    type IfcRadioActivityMeasure {
        required property `IfcRadioActivityMeasure` -> float64;
    }

    type IfcRatioMeasure {
        required property `IfcRatioMeasure` -> float64;
    }

    type IfcReal {
        required property `IfcReal` -> float64;
    }

    type IfcReference  {
        property TypeIdentifier -> str;
        property AttributeIdentifier -> str;
        property InstanceName -> str;
        property ListPositions -> tuple<int64>;
        link InnerReference -> IfcReference;
    }

    abstract type IfcRepresentationContext  {
        property ContextIdentifier -> str;
        property ContextType -> str;
    }

    abstract type IfcRepresentationItem  {
    }

    abstract type IfcResourceLevelRelationship  {
        property Name -> str;
        property Description -> str;
    }

    type IfcRotationalFrequencyMeasure {
        required property `IfcRotationalFrequencyMeasure` -> float64;
    }

    type IfcRotationalMassMeasure {
        required property `IfcRotationalMassMeasure` -> float64;
    }

    type IfcRotationalStiffnessMeasure {
        required property `IfcRotationalStiffnessMeasure` -> float64;
    }

    type IfcSectionModulusMeasure {
        required property `IfcSectionModulusMeasure` -> float64;
    }

    type IfcSectionalAreaIntegralMeasure {
        required property `IfcSectionalAreaIntegralMeasure` -> float64;
    }

    type IfcShearModulusMeasure {
        required property `IfcShearModulusMeasure` -> float64;
    }

    type IfcSolidAngleMeasure {
        required property `IfcSolidAngleMeasure` -> float64;
    }

    type IfcSoundPowerLevelMeasure {
        required property `IfcSoundPowerLevelMeasure` -> float64;
    }

    type IfcSoundPowerMeasure {
        required property `IfcSoundPowerMeasure` -> float64;
    }

    type IfcSoundPressureLevelMeasure {
        required property `IfcSoundPressureLevelMeasure` -> float64;
    }

    type IfcSoundPressureMeasure {
        required property `IfcSoundPressureMeasure` -> float64;
    }

    type IfcSpecificHeatCapacityMeasure {
        required property `IfcSpecificHeatCapacityMeasure` -> float64;
    }

    type IfcSpecularExponent {
        required property `IfcSpecularExponent` -> float64;
    }

    type IfcSpecularRoughness {
        required property `IfcSpecularRoughness` -> float64;
    }

    abstract type IfcStructuralConnectionCondition  {
        property Name -> str;
    }

    abstract type IfcStructuralLoad  {
        property Name -> str;
    }

    type IfcTemperatureGradientMeasure {
        required property `IfcTemperatureGradientMeasure` -> float64;
    }

    type IfcTemperatureRateOfChangeMeasure {
        required property `IfcTemperatureRateOfChangeMeasure` -> float64;
    }

    type IfcText {
        required property `IfcText` -> str;
    }

    type IfcTextAlignment {
        required property `IfcTextAlignment` -> str;
    }

    type IfcTextDecoration {
        required property `IfcTextDecoration` -> str;
    }

    type IfcTextFontName {
        required property `IfcTextFontName` -> str;
    }

    type IfcTextTransformation {
        required property `IfcTextTransformation` -> str;
    }

    type IfcThermalAdmittanceMeasure {
        required property `IfcThermalAdmittanceMeasure` -> float64;
    }

    type IfcThermalConductivityMeasure {
        required property `IfcThermalConductivityMeasure` -> float64;
    }

    type IfcThermalExpansionCoefficientMeasure {
        required property `IfcThermalExpansionCoefficientMeasure` -> float64;
    }

    type IfcThermalResistanceMeasure {
        required property `IfcThermalResistanceMeasure` -> float64;
    }

    type IfcThermalTransmittanceMeasure {
        required property `IfcThermalTransmittanceMeasure` -> float64;
    }

    type IfcThermodynamicTemperatureMeasure {
        required property `IfcThermodynamicTemperatureMeasure` -> float64;
    }

    type IfcTime {
        required property `IfcTime` -> str;
    }

    type IfcTimeMeasure {
        required property `IfcTimeMeasure` -> float64;
    }

    type IfcTimePeriod  {
        required property StartTime -> str;
        required property EndTime -> str;
    }

    type IfcTimeStamp {
        required property `IfcTimeStamp` -> int64;
    }

    type IfcTorqueMeasure {
        required property `IfcTorqueMeasure` -> float64;
    }

    type IfcURIReference {
        required property `IfcURIReference` -> str;
    }

    type IfcVaporPermeabilityMeasure {
        required property `IfcVaporPermeabilityMeasure` -> float64;
    }

    type IfcVolumeMeasure {
        required property `IfcVolumeMeasure` -> float64;
    }

    type IfcVolumetricFlowRateMeasure {
        required property `IfcVolumetricFlowRateMeasure` -> float64;
    }

    type IfcWarpingConstantMeasure {
        required property `IfcWarpingConstantMeasure` -> float64;
    }

    type IfcWarpingMomentMeasure {
        required property `IfcWarpingMomentMeasure` -> float64;
    }

    type IfcActorRole  {
        required property Role -> str {
            constraint one_of ('ARCHITECT','BUILDINGOPERATOR','BUILDINGOWNER','CIVILENGINEER','CLIENT','COMMISSIONINGENGINEER','CONSTRUCTIONMANAGER','CONSULTANT','CONTRACTOR','COSTENGINEER','ELECTRICALENGINEER','ENGINEER','FACILITIESMANAGER','FIELDCONSTRUCTIONMANAGER','MANUFACTURER','MECHANICALENGINEER','OWNER','PROJECTMANAGER','RESELLER','STRUCTURALENGINEER','SUBCONTRACTOR','SUPPLIER','USERDEFINED');
        };
        property UserDefinedRole -> str;
        property Description -> str;
    }

    abstract type IfcAddress  {
        property Purpose -> str {
            constraint one_of ('DISTRIBUTIONPOINT','HOME','OFFICE','SITE','USERDEFINED');
        };
        property Description -> str;
        property UserDefinedPurpose -> str;
    }

    type IfcArcIndex {
        required property `IfcArcIndex` -> tuple<int64, int64, int64>;
    }

    type IfcBendingParameterSelect {
        link IfcBendingParameterSelect -> IfcLengthMeasure | IfcPlaneAngleMeasure;
    }

    type IfcClassification extending IfcExternalInformation {
        property Source -> str;
        property Edition -> str;
        property EditionDate -> str;
        required property Name -> str;
        property Description -> str;
        property Location -> str;
        property ReferenceTokens -> tuple<str>;
    }

    type IfcClassificationReference extending IfcExternalReference {
        property Description -> str;
        property Sort -> str;
    }

    type IfcColourRgbList extending IfcPresentationItem {
        required property ColourList -> array<tuple<float64, float64, float64>>;
    }

    abstract type IfcColourSpecification extending IfcPresentationItem {
        property Name -> str;
    }

    type IfcCurveStyleFontPattern extending IfcPresentationItem {
        required property VisibleSegmentLength -> float64;
        required property InvisibleSegmentLength -> float64;
    }

    type IfcDerivedMeasureValue {
        link IfcDerivedMeasureValue -> IfcAbsorbedDoseMeasure | IfcAccelerationMeasure | IfcAngularVelocityMeasure | IfcAreaDensityMeasure | IfcCompoundPlaneAngleMeasure | IfcCurvatureMeasure | IfcDoseEquivalentMeasure | IfcDynamicViscosityMeasure | IfcElectricCapacitanceMeasure | IfcElectricChargeMeasure | IfcElectricConductanceMeasure | IfcElectricResistanceMeasure | IfcElectricVoltageMeasure | IfcEnergyMeasure | IfcForceMeasure | IfcFrequencyMeasure | IfcHeatFluxDensityMeasure | IfcHeatingValueMeasure | IfcIlluminanceMeasure | IfcInductanceMeasure | IfcIntegerCountRateMeasure | IfcIonConcentrationMeasure | IfcIsothermalMoistureCapacityMeasure | IfcKinematicViscosityMeasure | IfcLinearForceMeasure | IfcLinearMomentMeasure | IfcLinearStiffnessMeasure | IfcLinearVelocityMeasure | IfcLuminousFluxMeasure | IfcLuminousIntensityDistributionMeasure | IfcMagneticFluxDensityMeasure | IfcMagneticFluxMeasure | IfcMassDensityMeasure | IfcMassFlowRateMeasure | IfcMassPerLengthMeasure | IfcModulusOfElasticityMeasure | IfcModulusOfLinearSubgradeReactionMeasure | IfcModulusOfRotationalSubgradeReactionMeasure | IfcModulusOfSubgradeReactionMeasure | IfcMoistureDiffusivityMeasure | IfcMolecularWeightMeasure | IfcMomentOfInertiaMeasure | IfcMonetaryMeasure | IfcPHMeasure | IfcPlanarForceMeasure | IfcPowerMeasure | IfcPressureMeasure | IfcRadioActivityMeasure | IfcRotationalFrequencyMeasure | IfcRotationalMassMeasure | IfcRotationalStiffnessMeasure | IfcSectionModulusMeasure | IfcSectionalAreaIntegralMeasure | IfcShearModulusMeasure | IfcSoundPowerLevelMeasure | IfcSoundPowerMeasure | IfcSoundPressureLevelMeasure | IfcSoundPressureMeasure | IfcSpecificHeatCapacityMeasure | IfcTemperatureGradientMeasure | IfcTemperatureRateOfChangeMeasure | IfcThermalAdmittanceMeasure | IfcThermalConductivityMeasure | IfcThermalExpansionCoefficientMeasure | IfcThermalResistanceMeasure | IfcThermalTransmittanceMeasure | IfcTorqueMeasure | IfcVaporPermeabilityMeasure | IfcVolumetricFlowRateMeasure | IfcWarpingConstantMeasure | IfcWarpingMomentMeasure;
    }

    type IfcExternallyDefinedHatchStyle extending IfcExternalReference {
    }

    type IfcExternallyDefinedSurfaceStyle extending IfcExternalReference {
    }

    type IfcExternallyDefinedTextFont extending IfcExternalReference {
    }

    type IfcFailureConnectionCondition extending IfcStructuralConnectionCondition {
        property TensionFailureX -> float64;
        property TensionFailureY -> float64;
        property TensionFailureZ -> float64;
        property CompressionFailureX -> float64;
        property CompressionFailureY -> float64;
        property CompressionFailureZ -> float64;
    }

    abstract type IfcGeometricRepresentationItem extending IfcRepresentationItem {
    }

    type IfcLightIntensityDistribution  {
        required property LightDistributionCurve -> str {
            constraint one_of ('NOTDEFINED','TYPE_A','TYPE_B','TYPE_C');
        };
        required multi link DistributionData -> IfcLightDistributionData;
    }

    type IfcLineIndex {
        required property `IfcLineIndex` -> tuple<int64, int64>;
    }

    type IfcMaterial extending IfcMaterialDefinition {
        required property Name -> str;
        property Description -> str;
        property Category -> str;
    }

    type IfcMeasureValue {
        link IfcMeasureValue -> IfcAmountOfSubstanceMeasure | IfcAreaMeasure | IfcComplexNumber | IfcContextDependentMeasure | IfcCountMeasure | IfcDescriptiveMeasure | IfcElectricCurrentMeasure | IfcLengthMeasure | IfcLuminousIntensityMeasure | IfcMassMeasure | IfcNonNegativeLengthMeasure | IfcNormalisedRatioMeasure | IfcNumericMeasure | IfcParameterValue | IfcPlaneAngleMeasure | IfcPositiveLengthMeasure | IfcPositivePlaneAngleMeasure | IfcPositiveRatioMeasure | IfcRatioMeasure | IfcSolidAngleMeasure | IfcThermodynamicTemperatureMeasure | IfcTimeMeasure | IfcVolumeMeasure;
    }

    type IfcModulusOfRotationalSubgradeReactionSelect {
        link IfcModulusOfRotationalSubgradeReactionSelect -> IfcBoolean | IfcModulusOfRotationalSubgradeReactionMeasure;
    }

    type IfcModulusOfSubgradeReactionSelect {
        link IfcModulusOfSubgradeReactionSelect -> IfcBoolean | IfcModulusOfSubgradeReactionMeasure;
    }

    type IfcModulusOfTranslationalSubgradeReactionSelect {
        link IfcModulusOfTranslationalSubgradeReactionSelect -> IfcBoolean | IfcModulusOfLinearSubgradeReactionMeasure;
    }

    abstract type IfcNamedUnit  {
        link Dimensions -> IfcDimensionalExponents;
        required property UnitType -> str {
            constraint one_of ('ABSORBEDDOSEUNIT','AMOUNTOFSUBSTANCEUNIT','AREAUNIT','DOSEEQUIVALENTUNIT','ELECTRICCAPACITANCEUNIT','ELECTRICCHARGEUNIT','ELECTRICCONDUCTANCEUNIT','ELECTRICCURRENTUNIT','ELECTRICRESISTANCEUNIT','ELECTRICVOLTAGEUNIT','ENERGYUNIT','FORCEUNIT','FREQUENCYUNIT','ILLUMINANCEUNIT','INDUCTANCEUNIT','LENGTHUNIT','LUMINOUSFLUXUNIT','LUMINOUSINTENSITYUNIT','MAGNETICFLUXDENSITYUNIT','MAGNETICFLUXUNIT','MASSUNIT','PLANEANGLEUNIT','POWERUNIT','PRESSUREUNIT','RADIOACTIVITYUNIT','SOLIDANGLEUNIT','THERMODYNAMICTEMPERATUREUNIT','TIMEUNIT','USERDEFINED','VOLUMEUNIT');
        };
    }

    type IfcPhysicalComplexQuantity extending IfcPhysicalQuantity {
        required multi link HasQuantities -> IfcPhysicalQuantity;
        required property Discrimination -> str;
        property Quality -> str;
        property Usage -> str;
    }

    abstract type IfcPreDefinedItem extending IfcPresentationItem {
        required property Name -> str;
    }

    abstract type IfcPreDefinedProperties extending IfcPropertyAbstraction {
    }

    type IfcProfileDef  {
        required property ProfileType -> str {
            constraint one_of ('AREA','CURVE');
        };
        property ProfileName -> str;
    }

    abstract type IfcProperty extending IfcPropertyAbstraction {
        required property Name -> str;
        property Description -> str;
    }

    type IfcRecurrencePattern  {
        required property RecurrenceType -> str {
            constraint one_of ('BY_DAY_COUNT','BY_WEEKDAY_COUNT','DAILY','MONTHLY_BY_DAY_OF_MONTH','MONTHLY_BY_POSITION','WEEKLY','YEARLY_BY_DAY_OF_MONTH','YEARLY_BY_POSITION');
        };
        multi property DayComponent -> int64;
        multi property WeekdayComponent -> int64;
        multi property MonthComponent -> int64;
        property Position -> int64;
        property Interval -> int64;
        property Occurrences -> int64;
        multi link TimePeriods -> IfcTimePeriod;
    }

    abstract type IfcRepresentation  {
        required link ContextOfItems -> IfcRepresentationContext;
        property RepresentationIdentifier -> str;
        property RepresentationType -> str;
        required multi link Items -> IfcRepresentationItem;
    }

    type IfcRotationalStiffnessSelect {
        link IfcRotationalStiffnessSelect -> IfcBoolean | IfcRotationalStiffnessMeasure;
    }

    abstract type IfcSchedulingTime  {
        property Name -> str;
        property DataOrigin -> str {
            constraint one_of ('MEASURED','NOTDEFINED','PREDICTED','SIMULATED','USERDEFINED');
        };
        property UserDefinedDataOrigin -> str;
    }

    type IfcSimpleValue {
        link IfcSimpleValue -> IfcBinary | IfcBoolean | IfcDate | IfcDateTime | IfcDuration | IfcIdentifier | IfcInteger | IfcLabel | IfcLogical | IfcPositiveInteger | IfcReal | IfcText | IfcTime | IfcTimeStamp;
    }

    type IfcSizeSelect {
        link IfcSizeSelect -> IfcDescriptiveMeasure | IfcLengthMeasure | IfcNormalisedRatioMeasure | IfcPositiveLengthMeasure | IfcPositiveRatioMeasure | IfcRatioMeasure;
    }

    type IfcSlippageConnectionCondition extending IfcStructuralConnectionCondition {
        property SlippageX -> float64;
        property SlippageY -> float64;
        property SlippageZ -> float64;
    }

    type IfcSpecularHighlightSelect {
        link IfcSpecularHighlightSelect -> IfcSpecularExponent | IfcSpecularRoughness;
    }

    abstract type IfcStructuralLoadOrResult extending IfcStructuralLoad {
    }

    type IfcSurfaceStyleRefraction extending IfcPresentationItem {
        property RefractionIndex -> float64;
        property DispersionFactor -> float64;
    }

    type IfcTextureVertex extending IfcPresentationItem {
        required property Coordinates -> tuple<float64, float64>;
    }

    type IfcTextureVertexList extending IfcPresentationItem {
        required property TexCoordsList -> array<tuple<float64, float64>>;
    }

    type IfcTimeOrRatioSelect {
        link IfcTimeOrRatioSelect -> IfcDuration | IfcRatioMeasure;
    }

    abstract type IfcTopologicalRepresentationItem extending IfcRepresentationItem {
    }

    type IfcTranslationalStiffnessSelect {
        link IfcTranslationalStiffnessSelect -> IfcBoolean | IfcLinearStiffnessMeasure;
    }

    type IfcWarpingStiffnessSelect {
        link IfcWarpingStiffnessSelect -> IfcBoolean | IfcWarpingMomentMeasure;
    }

    abstract type IfcAlignment2DSegment extending IfcGeometricRepresentationItem {
        property TangentialContinuity -> bool;
        property StartTag -> str;
        property EndTag -> str;
    }

    type IfcBooleanResult extending IfcGeometricRepresentationItem {
        required property Operator -> str {
            constraint one_of ('DIFFERENCE','INTERSECTION','UNION');
        };
    }

    type IfcBoundaryEdgeCondition extending IfcBoundaryCondition {
        link TranslationalStiffnessByLengthX -> IfcModulusOfTranslationalSubgradeReactionSelect;
        link TranslationalStiffnessByLengthY -> IfcModulusOfTranslationalSubgradeReactionSelect;
        link TranslationalStiffnessByLengthZ -> IfcModulusOfTranslationalSubgradeReactionSelect;
        link RotationalStiffnessByLengthX -> IfcModulusOfRotationalSubgradeReactionSelect;
        link RotationalStiffnessByLengthY -> IfcModulusOfRotationalSubgradeReactionSelect;
        link RotationalStiffnessByLengthZ -> IfcModulusOfRotationalSubgradeReactionSelect;
    }

    type IfcBoundaryFaceCondition extending IfcBoundaryCondition {
        link TranslationalStiffnessByAreaX -> IfcModulusOfSubgradeReactionSelect;
        link TranslationalStiffnessByAreaY -> IfcModulusOfSubgradeReactionSelect;
        link TranslationalStiffnessByAreaZ -> IfcModulusOfSubgradeReactionSelect;
    }

    type IfcBoundaryNodeCondition extending IfcBoundaryCondition {
        link TranslationalStiffnessX -> IfcTranslationalStiffnessSelect;
        link TranslationalStiffnessY -> IfcTranslationalStiffnessSelect;
        link TranslationalStiffnessZ -> IfcTranslationalStiffnessSelect;
        link RotationalStiffnessX -> IfcRotationalStiffnessSelect;
        link RotationalStiffnessY -> IfcRotationalStiffnessSelect;
        link RotationalStiffnessZ -> IfcRotationalStiffnessSelect;
    }

    abstract type IfcCartesianPointList extending IfcGeometricRepresentationItem {
    }

    type IfcClassificationReferenceSelect {
        link IfcClassificationReferenceSelect -> IfcClassification | IfcClassificationReference;
    }

    type IfcClassificationSelect {
        link IfcClassificationSelect -> IfcClassification | IfcClassificationReference;
    }

    type IfcColourRgb extending IfcColourSpecification {
        required property Red -> float64;
        required property Green -> float64;
        required property Blue -> float64;
    }

    type IfcComplexProperty extending IfcProperty {
        required property UsageName -> str;
        required multi link HasProperties -> IfcProperty;
    }

    type IfcCompositeProfileDef extending IfcProfileDef {
        required multi link Profiles -> IfcProfileDef;
        property Label -> str;
    }

    type IfcContextDependentUnit extending IfcNamedUnit {
        required property Name -> str;
    }

    abstract type IfcCurve extending IfcGeometricRepresentationItem {
    }

    type IfcCurveStyleFont extending IfcPresentationItem {
        property Name -> str;
        required multi link PatternList -> IfcCurveStyleFontPattern;
    }

    type IfcDerivedUnitElement  {
        required link Unit -> IfcNamedUnit;
        required property Exponent -> int64;
    }

    type IfcDirection extending IfcGeometricRepresentationItem {
        required property DirectionRatios -> array<float64>{
            constraint expression on (len(__subject__) = 2 or len(__subject__) = 3)
        };
    }

    type IfcDistanceExpression extending IfcGeometricRepresentationItem {
        required property DistanceAlong -> float64;
        property OffsetLateral -> float64;
        property OffsetVertical -> float64;
        property OffsetLongitudinal -> float64;
        property AlongHorizontal -> bool;
    }

    type IfcEventTime extending IfcSchedulingTime {
        property ActualDate -> str;
        property EarlyDate -> str;
        property LateDate -> str;
        property ScheduleDate -> str;
    }

    abstract type IfcExtendedProperties extending IfcPropertyAbstraction {
        property Name -> str;
        property Description -> str;
        required multi link Properties -> IfcProperty;
    }

    type IfcLagTime extending IfcSchedulingTime {
        required link LagValue -> IfcTimeOrRatioSelect;
        required property DurationType -> str {
            constraint one_of ('ELAPSEDTIME','NOTDEFINED','WORKTIME');
        };
    }

    type IfcLayeredItem {
        link IfcLayeredItem -> IfcRepresentation | IfcRepresentationItem;
    }

    type IfcLightDistributionDataSourceSelect {
        link IfcLightDistributionDataSourceSelect -> IfcExternalReference | IfcLightIntensityDistribution;
    }

    type IfcLoop extending IfcTopologicalRepresentationItem {
    }

    type IfcMaterialConstituent extending IfcMaterialDefinition {
        property Name -> str;
        property Description -> str;
        required link Material -> IfcMaterial;
        property Fraction -> float64;
        property Category -> str;
    }

    type IfcMaterialLayer extending IfcMaterialDefinition {
        link Material -> IfcMaterial;
        required property LayerThickness -> float64;
        property IsVentilated -> bool;
        property Name -> str;
        property Description -> str;
        property Category -> str;
        property Priority -> int64;
    }

    type IfcMaterialList  {
        required multi link Materials -> IfcMaterial;
    }

    type IfcMaterialProfile extending IfcMaterialDefinition {
        property Name -> str;
        property Description -> str;
        link Material -> IfcMaterial;
        required link Profile -> IfcProfileDef;
        property Priority -> int64;
        property Category -> str;
    }

    type IfcMaterialRelationship extending IfcResourceLevelRelationship {
        required link RelatingMaterial -> IfcMaterial;
        required multi link RelatedMaterials -> IfcMaterial;
        property Expression -> str;
    }

    type IfcOrganization  {
        property Identification -> str;
        required property Name -> str;
        property Description -> str;
        multi link Roles -> IfcActorRole;
        multi link Addresses -> IfcAddress;
    }

    type IfcPerson  {
        property Identification -> str;
        property FamilyName -> str;
        property GivenName -> str;
        property MiddleNames -> tuple<str>;
        property PrefixTitles -> tuple<str>;
        property SuffixTitles -> tuple<str>;
        multi link Roles -> IfcActorRole;
        multi link Addresses -> IfcAddress;
    }

    abstract type IfcPhysicalSimpleQuantity extending IfcPhysicalQuantity {
        link Unit -> IfcNamedUnit;
    }

    type IfcPlanarExtent extending IfcGeometricRepresentationItem {
        required property SizeInX -> float64;
        required property SizeInY -> float64;
    }

    abstract type IfcPoint extending IfcGeometricRepresentationItem {
    }

    type IfcPostalAddress extending IfcAddress {
        property InternalLocation -> str;
        property AddressLines -> tuple<str>;
        property PostalBox -> str;
        property Town -> str;
        property Region -> str;
        property PostalCode -> str;
        property Country -> str;
    }

    abstract type IfcPreDefinedColour extending IfcPreDefinedItem {
    }

    abstract type IfcPreDefinedCurveFont extending IfcPreDefinedItem {
    }

    abstract type IfcPreDefinedTextFont extending IfcPreDefinedItem {
    }

    abstract type IfcProductRepresentation  {
        property Name -> str;
        property Description -> str;
        required multi link Representations -> IfcRepresentation;
    }

    type IfcProjectedCRS extending IfcCoordinateReferenceSystem {
        property MapProjection -> str;
        property MapZone -> str;
        link MapUnit -> IfcNamedUnit;
    }

    type IfcPropertyDependencyRelationship extending IfcResourceLevelRelationship {
        required link DependingProperty -> IfcProperty;
        required link DependantProperty -> IfcProperty;
        property Expression -> str;
    }

    type IfcReinforcementBarProperties extending IfcPreDefinedProperties {
        required property TotalCrossSectionArea -> float64;
        required property SteelGrade -> str;
        property BarSurface -> str {
            constraint one_of ('PLAIN','TEXTURED');
        };
        property EffectiveDepth -> float64;
        property NominalBarDiameter -> float64;
        property BarCount -> int64;
    }

    type IfcResourceTime extending IfcSchedulingTime {
        property ScheduleWork -> str;
        property ScheduleUsage -> float64;
        property ScheduleStart -> str;
        property ScheduleFinish -> str;
        property ScheduleContour -> str;
        property LevelingDelay -> str;
        property IsOverAllocated -> bool;
        property StatusTime -> str;
        property ActualWork -> str;
        property ActualUsage -> float64;
        property ActualStart -> str;
        property ActualFinish -> str;
        property RemainingWork -> str;
        property RemainingUsage -> float64;
        property Completion -> float64;
    }

    type IfcSIUnit extending IfcNamedUnit {
        property Prefix -> str {
            constraint one_of ('ATTO','CENTI','DECA','DECI','EXA','FEMTO','GIGA','HECTO','KILO','MEGA','MICRO','MILLI','NANO','PETA','PICO','TERA');
        };
        required property Name -> str {
            constraint one_of ('AMPERE','BECQUEREL','CANDELA','COULOMB','CUBIC_METRE','DEGREE_CELSIUS','FARAD','GRAM','GRAY','HENRY','HERTZ','JOULE','KELVIN','LUMEN','LUX','METRE','MOLE','NEWTON','OHM','PASCAL','RADIAN','SECOND','SIEMENS','SIEVERT','SQUARE_METRE','STERADIAN','TESLA','VOLT','WATT','WEBER');
        };
    }

    type IfcSectionProperties extending IfcPreDefinedProperties {
        required property SectionType -> str {
            constraint one_of ('TAPERED','UNIFORM');
        };
        required link StartProfile -> IfcProfileDef;
        link EndProfile -> IfcProfileDef;
    }

    type IfcSegmentIndexSelect {
        link IfcSegmentIndexSelect -> IfcArcIndex | IfcLineIndex;
    }

    abstract type IfcShapeModel extending IfcRepresentation {
    }

    abstract type IfcSimpleProperty extending IfcProperty {
    }

    abstract type IfcSolidModel extending IfcGeometricRepresentationItem {
    }

    type IfcStructuralLoadConfiguration extending IfcStructuralLoad {
        required multi link Values -> IfcStructuralLoadOrResult;
        property Locations -> array<tuple<float64, float64>>;
    }

    abstract type IfcStructuralLoadStatic extending IfcStructuralLoadOrResult {
    }

    abstract type IfcStyleModel extending IfcRepresentation {
    }

    abstract type IfcSurface extending IfcGeometricRepresentationItem {
    }

    type IfcSurfaceReinforcementArea extending IfcStructuralLoadOrResult {
        property SurfaceReinforcement1 -> array<float64>{
            constraint expression on (len(__subject__) = 2 or len(__subject__) = 3)
        };
        property SurfaceReinforcement2 -> array<float64>{
            constraint expression on (len(__subject__) = 2 or len(__subject__) = 3)
        };
        property ShearReinforcement -> float64;
    }

    type IfcTaskTime extending IfcSchedulingTime {
        property DurationType -> str {
            constraint one_of ('ELAPSEDTIME','NOTDEFINED','WORKTIME');
        };
        property ScheduleDuration -> str;
        property ScheduleStart -> str;
        property ScheduleFinish -> str;
        property EarlyStart -> str;
        property EarlyFinish -> str;
        property LateStart -> str;
        property LateFinish -> str;
        property FreeFloat -> str;
        property TotalFloat -> str;
        property IsCritical -> bool;
        property StatusTime -> str;
        property ActualDuration -> str;
        property ActualStart -> str;
        property ActualFinish -> str;
        property RemainingTime -> str;
        property Completion -> float64;
    }

    type IfcTelecomAddress extending IfcAddress {
        property TelephoneNumbers -> tuple<str>;
        property FacsimileNumbers -> tuple<str>;
        property PagerNumber -> str;
        property ElectronicMailAddresses -> tuple<str>;
        property WWWHomePageURL -> str;
        property MessagingIDs -> tuple<str>;
    }

    abstract type IfcTessellatedItem extending IfcGeometricRepresentationItem {
    }

    type IfcTextStyleTextModel extending IfcPresentationItem {
        link TextIndent -> IfcSizeSelect;
        property TextAlign -> str;
        property TextDecoration -> str;
        link LetterSpacing -> IfcSizeSelect;
        link WordSpacing -> IfcSizeSelect;
        property TextTransform -> str;
        link LineHeight -> IfcSizeSelect;
    }

    type IfcValue {
        link IfcValue -> IfcAbsorbedDoseMeasure | IfcAccelerationMeasure | IfcAngularVelocityMeasure | IfcAreaDensityMeasure | IfcCompoundPlaneAngleMeasure | IfcCurvatureMeasure | IfcDoseEquivalentMeasure | IfcDynamicViscosityMeasure | IfcElectricCapacitanceMeasure | IfcElectricChargeMeasure | IfcElectricConductanceMeasure | IfcElectricResistanceMeasure | IfcElectricVoltageMeasure | IfcEnergyMeasure | IfcForceMeasure | IfcFrequencyMeasure | IfcHeatFluxDensityMeasure | IfcHeatingValueMeasure | IfcIlluminanceMeasure | IfcInductanceMeasure | IfcIntegerCountRateMeasure | IfcIonConcentrationMeasure | IfcIsothermalMoistureCapacityMeasure | IfcKinematicViscosityMeasure | IfcLinearForceMeasure | IfcLinearMomentMeasure | IfcLinearStiffnessMeasure | IfcLinearVelocityMeasure | IfcLuminousFluxMeasure | IfcLuminousIntensityDistributionMeasure | IfcMagneticFluxDensityMeasure | IfcMagneticFluxMeasure | IfcMassDensityMeasure | IfcMassFlowRateMeasure | IfcMassPerLengthMeasure | IfcModulusOfElasticityMeasure | IfcModulusOfLinearSubgradeReactionMeasure | IfcModulusOfRotationalSubgradeReactionMeasure | IfcModulusOfSubgradeReactionMeasure | IfcMoistureDiffusivityMeasure | IfcMolecularWeightMeasure | IfcMomentOfInertiaMeasure | IfcMonetaryMeasure | IfcPHMeasure | IfcPlanarForceMeasure | IfcPowerMeasure | IfcPressureMeasure | IfcRadioActivityMeasure | IfcRotationalFrequencyMeasure | IfcRotationalMassMeasure | IfcRotationalStiffnessMeasure | IfcSectionModulusMeasure | IfcSectionalAreaIntegralMeasure | IfcShearModulusMeasure | IfcSoundPowerLevelMeasure | IfcSoundPowerMeasure | IfcSoundPressureLevelMeasure | IfcSoundPressureMeasure | IfcSpecificHeatCapacityMeasure | IfcTemperatureGradientMeasure | IfcTemperatureRateOfChangeMeasure | IfcThermalAdmittanceMeasure | IfcThermalConductivityMeasure | IfcThermalExpansionCoefficientMeasure | IfcThermalResistanceMeasure | IfcThermalTransmittanceMeasure | IfcTorqueMeasure | IfcVaporPermeabilityMeasure | IfcVolumetricFlowRateMeasure | IfcWarpingConstantMeasure | IfcWarpingMomentMeasure | IfcAmountOfSubstanceMeasure | IfcAreaMeasure | IfcComplexNumber | IfcContextDependentMeasure | IfcCountMeasure | IfcDescriptiveMeasure | IfcElectricCurrentMeasure | IfcLengthMeasure | IfcLuminousIntensityMeasure | IfcMassMeasure | IfcNonNegativeLengthMeasure | IfcNormalisedRatioMeasure | IfcNumericMeasure | IfcParameterValue | IfcPlaneAngleMeasure | IfcPositiveLengthMeasure | IfcPositivePlaneAngleMeasure | IfcPositiveRatioMeasure | IfcRatioMeasure | IfcSolidAngleMeasure | IfcThermodynamicTemperatureMeasure | IfcTimeMeasure | IfcVolumeMeasure | IfcBinary | IfcBoolean | IfcDate | IfcDateTime | IfcDuration | IfcIdentifier | IfcInteger | IfcLabel | IfcLogical | IfcPositiveInteger | IfcReal | IfcText | IfcTime | IfcTimeStamp;
    }

    type IfcVertex extending IfcTopologicalRepresentationItem {
    }

    type IfcWorkTime extending IfcSchedulingTime {
        link RecurrencePattern -> IfcRecurrencePattern;
        property `Start` -> str;
        property Finish -> str;
    }

    abstract type IfcAlignment2DVerticalSegment extending IfcAlignment2DSegment {
        required property StartDistAlong -> float64;
        required property HorizontalLength -> float64;
        required property StartHeight -> float64;
        required property StartGradient -> float64;
    }

    type IfcAnnotationFillArea extending IfcGeometricRepresentationItem {
        required link OuterBoundary -> IfcCurve;
        multi link InnerBoundaries -> IfcCurve;
    }

    type IfcApplication  {
        required link ApplicationDeveloper -> IfcOrganization;
        required property Version -> str;
        required property ApplicationFullName -> str;
        required property ApplicationIdentifier -> str;
    }

    type IfcArbitraryClosedProfileDef extending IfcProfileDef {
        required link OuterCurve -> IfcCurve;
    }

    type IfcBooleanClippingResult extending IfcBooleanResult {
    }

    type IfcBoundaryNodeConditionWarping extending IfcBoundaryNodeCondition {
        link WarpingStiffness -> IfcWarpingStiffnessSelect;
    }

    abstract type IfcBoundedCurve extending IfcCurve {
    }

    abstract type IfcBoundedSurface extending IfcSurface {
    }

    type IfcCartesianPoint extending IfcPoint {
        required property Coordinates -> array<float64>{
            constraint expression on (len(__subject__) = 1 or len(__subject__) = 2 or len(__subject__) = 3)
        };
    }

    type IfcCartesianPointList2D extending IfcCartesianPointList {
        required property CoordList -> array<tuple<float64, float64>>;
        property TagList -> tuple<str>;
    }

    type IfcCartesianPointList3D extending IfcCartesianPointList {
        required property CoordList -> array<tuple<float64, float64, float64>>;
        property TagList -> tuple<str>;
    }

    type IfcColour {
        link IfcColour -> IfcColourSpecification | IfcPreDefinedColour;
    }

    type IfcColourOrFactor {
        link IfcColourOrFactor -> IfcColourRgb | IfcNormalisedRatioMeasure;
    }

    type IfcCompositeCurveSegment extending IfcGeometricRepresentationItem {
        required property Transition -> str {
            constraint one_of ('CONTINUOUS','CONTSAMEGRADIENT','CONTSAMEGRADIENTSAMECURVATURE','DISCONTINUOUS');
        };
        required property SameSense -> bool;
        required link ParentCurve -> IfcCurve;
    }

    type IfcCurveStyleFontSelect {
        link IfcCurveStyleFontSelect -> IfcCurveStyleFont | IfcPreDefinedCurveFont;
    }

    type IfcDerivedUnit  {
        required multi link Elements -> IfcDerivedUnitElement;
        required property UnitType -> str {
            constraint one_of ('ACCELERATIONUNIT','ANGULARVELOCITYUNIT','AREADENSITYUNIT','COMPOUNDPLANEANGLEUNIT','CURVATUREUNIT','DYNAMICVISCOSITYUNIT','HEATFLUXDENSITYUNIT','HEATINGVALUEUNIT','INTEGERCOUNTRATEUNIT','IONCONCENTRATIONUNIT','ISOTHERMALMOISTURECAPACITYUNIT','KINEMATICVISCOSITYUNIT','LINEARFORCEUNIT','LINEARMOMENTUNIT','LINEARSTIFFNESSUNIT','LINEARVELOCITYUNIT','LUMINOUSINTENSITYDISTRIBUTIONUNIT','MASSDENSITYUNIT','MASSFLOWRATEUNIT','MASSPERLENGTHUNIT','MODULUSOFELASTICITYUNIT','MODULUSOFLINEARSUBGRADEREACTIONUNIT','MODULUSOFROTATIONALSUBGRADEREACTIONUNIT','MODULUSOFSUBGRADEREACTIONUNIT','MOISTUREDIFFUSIVITYUNIT','MOLECULARWEIGHTUNIT','MOMENTOFINERTIAUNIT','PHUNIT','PLANARFORCEUNIT','ROTATIONALFREQUENCYUNIT','ROTATIONALMASSUNIT','ROTATIONALSTIFFNESSUNIT','SECTIONAREAINTEGRALUNIT','SECTIONMODULUSUNIT','SHEARMODULUSUNIT','SOUNDPOWERLEVELUNIT','SOUNDPOWERUNIT','SOUNDPRESSURELEVELUNIT','SOUNDPRESSUREUNIT','SPECIFICHEATCAPACITYUNIT','TEMPERATUREGRADIENTUNIT','TEMPERATURERATEOFCHANGEUNIT','THERMALADMITTANCEUNIT','THERMALCONDUCTANCEUNIT','THERMALEXPANSIONCOEFFICIENTUNIT','THERMALRESISTANCEUNIT','THERMALTRANSMITTANCEUNIT','TORQUEUNIT','USERDEFINED','VAPORPERMEABILITYUNIT','VOLUMETRICFLOWRATEUNIT','WARPINGCONSTANTUNIT','WARPINGMOMENTUNIT');
        };
        property UserDefinedType -> str;
    }

    type IfcDraughtingPreDefinedColour extending IfcPreDefinedColour {
    }

    type IfcDraughtingPreDefinedCurveFont extending IfcPreDefinedCurveFont {
    }

    type IfcEdge extending IfcTopologicalRepresentationItem {
        link EdgeStart -> IfcVertex;
        link EdgeEnd -> IfcVertex;
    }

    type IfcFaceBound extending IfcTopologicalRepresentationItem {
        required link Bound -> IfcLoop;
        required property Orientation -> bool;
    }

    type IfcGeometricSetSelect {
        link IfcGeometricSetSelect -> IfcCurve | IfcPoint | IfcSurface;
    }

    type IfcGridAxis  {
        property AxisTag -> str;
        required link AxisCurve -> IfcCurve;
        required property SameSense -> bool;
    }

    type IfcHalfSpaceSolid extending IfcGeometricRepresentationItem {
        required link BaseSurface -> IfcSurface;
        required property AgreementFlag -> bool;
    }

    type IfcIndexedPolygonalFace extending IfcTessellatedItem {
        required property CoordIndex -> tuple<int64, int64, int64>;
    }

    type IfcIrregularTimeSeriesValue  {
        required property TimeStamp -> str;
        required multi link ListValues -> IfcValue;
    }

    abstract type IfcLightSource extending IfcGeometricRepresentationItem {
        property Name -> str;
        required link LightColour -> IfcColourRgb;
        property AmbientIntensity -> float64;
        property Intensity -> float64;
    }

    type IfcMaterialClassificationRelationship  {
        required multi link MaterialClassifications -> IfcClassificationSelect;
        required link ClassifiedMaterial -> IfcMaterial;
    }

    type IfcMaterialConstituentSet extending IfcMaterialDefinition {
        property Name -> str;
        property Description -> str;
        multi link MaterialConstituents -> IfcMaterialConstituent;
    }

    type IfcMaterialDefinitionRepresentation extending IfcProductRepresentation {
        required link RepresentedMaterial -> IfcMaterial;
    }

    type IfcMaterialLayerSet extending IfcMaterialDefinition {
        required multi link MaterialLayers -> IfcMaterialLayer;
        property LayerSetName -> str;
        property Description -> str;
    }

    type IfcMaterialLayerWithOffsets extending IfcMaterialLayer {
        required property OffsetDirection -> str {
            constraint one_of ('AXIS1','AXIS2','AXIS3');
        };
        required multi property OffsetValues -> float64;
    }

    type IfcMaterialProfileSet extending IfcMaterialDefinition {
        property Name -> str;
        property Description -> str;
        required multi link MaterialProfiles -> IfcMaterialProfile;
        link CompositeProfile -> IfcCompositeProfileDef;
    }

    type IfcMaterialProfileWithOffsets extending IfcMaterialProfile {
        required multi property OffsetValues -> float64;
    }

    type IfcMaterialProperties extending IfcExtendedProperties {
        required link Material -> IfcMaterialDefinition;
    }

    type IfcMaterialSelect {
        link IfcMaterialSelect -> IfcMaterialDefinition | IfcMaterialList | IfcMaterialUsageDefinition;
    }

    abstract type IfcOffsetCurve extending IfcCurve {
        required link BasisCurve -> IfcCurve;
    }

    type IfcOrganizationRelationship extending IfcResourceLevelRelationship {
        required link RelatingOrganization -> IfcOrganization;
        required multi link RelatedOrganizations -> IfcOrganization;
    }

    type IfcOrientationExpression extending IfcGeometricRepresentationItem {
        required link LateralAxisDirection -> IfcDirection;
        required link VerticalAxisDirection -> IfcDirection;
    }

    type IfcPcurve extending IfcCurve {
        required link BasisSurface -> IfcSurface;
        required link ReferenceCurve -> IfcCurve;
    }

    type IfcPersonAndOrganization  {
        required link ThePerson -> IfcPerson;
        required link TheOrganization -> IfcOrganization;
        multi link Roles -> IfcActorRole;
    }

    type IfcPointOnCurve extending IfcPoint {
        required link BasisCurve -> IfcCurve;
        required property PointParameter -> float64;
    }

    type IfcPointOnSurface extending IfcPoint {
        required link BasisSurface -> IfcSurface;
        required property PointParameterU -> float64;
        required property PointParameterV -> float64;
    }

    type IfcPresentationLayerAssignment  {
        required property Name -> str;
        property Description -> str;
        required multi link AssignedItems -> IfcLayeredItem;
        property Identifier -> str;
    }

    type IfcProductDefinitionShape extending IfcProductRepresentation {
    }

    type IfcProfileProperties extending IfcExtendedProperties {
        required link ProfileDefinition -> IfcProfileDef;
    }

    type IfcQuantityArea extending IfcPhysicalSimpleQuantity {
        required property AreaValue -> float64;
        property Formula -> str;
    }

    type IfcQuantityCount extending IfcPhysicalSimpleQuantity {
        required property CountValue -> int64;
        property Formula -> str;
    }

    type IfcQuantityLength extending IfcPhysicalSimpleQuantity {
        required property LengthValue -> float64;
        property Formula -> str;
    }

    type IfcQuantityTime extending IfcPhysicalSimpleQuantity {
        required property TimeValue -> float64;
        property Formula -> str;
    }

    type IfcQuantityVolume extending IfcPhysicalSimpleQuantity {
        required property VolumeValue -> float64;
        property Formula -> str;
    }

    type IfcQuantityWeight extending IfcPhysicalSimpleQuantity {
        required property WeightValue -> float64;
        property Formula -> str;
    }

    type IfcSectionReinforcementProperties extending IfcPreDefinedProperties {
        required property LongitudinalStartPosition -> float64;
        required property LongitudinalEndPosition -> float64;
        property TransversePosition -> float64;
        required property ReinforcementRole -> str {
            constraint one_of ('ANCHORING','EDGE','LIGATURE','MAIN','NOTDEFINED','PUNCHING','RING','SHEAR','STUD','USERDEFINED');
        };
        required link SectionDefinition -> IfcSectionProperties;
        required multi link CrossSectionReinforcementDefinitions -> IfcReinforcementBarProperties;
    }

    abstract type IfcSectionedSolid extending IfcSolidModel {
        required link Directrix -> IfcCurve;
        required multi link CrossSections -> IfcProfileDef;
    }

    type IfcShapeRepresentation extending IfcShapeModel {
    }

    type IfcStructuralLoadLinearForce extending IfcStructuralLoadStatic {
        property LinearForceX -> float64;
        property LinearForceY -> float64;
        property LinearForceZ -> float64;
        property LinearMomentX -> float64;
        property LinearMomentY -> float64;
        property LinearMomentZ -> float64;
    }

    type IfcStructuralLoadPlanarForce extending IfcStructuralLoadStatic {
        property PlanarForceX -> float64;
        property PlanarForceY -> float64;
        property PlanarForceZ -> float64;
    }

    type IfcStructuralLoadSingleDisplacement extending IfcStructuralLoadStatic {
        property DisplacementX -> float64;
        property DisplacementY -> float64;
        property DisplacementZ -> float64;
        property RotationalDisplacementRX -> float64;
        property RotationalDisplacementRY -> float64;
        property RotationalDisplacementRZ -> float64;
    }

    type IfcStructuralLoadSingleForce extending IfcStructuralLoadStatic {
        property ForceX -> float64;
        property ForceY -> float64;
        property ForceZ -> float64;
        property MomentX -> float64;
        property MomentY -> float64;
        property MomentZ -> float64;
    }

    type IfcStructuralLoadTemperature extending IfcStructuralLoadStatic {
        property DeltaTConstant -> float64;
        property DeltaTY -> float64;
        property DeltaTZ -> float64;
    }

    type IfcStyledRepresentation extending IfcStyleModel {
    }

    type IfcSurfaceStyleLighting extending IfcPresentationItem {
        required link DiffuseTransmissionColour -> IfcColourRgb;
        required link DiffuseReflectionColour -> IfcColourRgb;
        required link TransmissionColour -> IfcColourRgb;
        required link ReflectanceColour -> IfcColourRgb;
    }

    type IfcSurfaceStyleShading extending IfcPresentationItem {
        required link SurfaceColour -> IfcColourRgb;
        property Transparency -> float64;
    }

    type IfcSweptDiskSolid extending IfcSolidModel {
        required link Directrix -> IfcCurve;
        required property Radius -> float64;
        property InnerRadius -> float64;
        property StartParam -> float64;
        property EndParam -> float64;
    }

    type IfcTableRow  {
        multi link RowCells -> IfcValue;
        property IsHeading -> bool;
    }

    type IfcTaskTimeRecurring extending IfcTaskTime {
        required link Recurrence -> IfcRecurrencePattern;
    }

    type IfcTextFontSelect {
        link IfcTextFontSelect -> IfcExternallyDefinedTextFont | IfcPreDefinedTextFont;
    }

    type IfcTextStyleFontModel extending IfcPreDefinedTextFont {
        required property FontFamily -> tuple<str>;
        property FontStyle -> str;
        property FontVariant -> str;
        property FontWeight -> str;
        required link FontSize -> IfcSizeSelect;
    }

    type IfcTimeSeriesValue  {
        required multi link ListValues -> IfcValue;
    }

    type IfcTopologyRepresentation extending IfcShapeModel {
    }

    type IfcVector extending IfcGeometricRepresentationItem {
        required link Orientation -> IfcDirection;
        required property Magnitude -> float64;
    }

    type IfcVertexLoop extending IfcLoop {
        required link LoopVertex -> IfcVertex;
    }

    type IfcVertexPoint extending IfcVertex {
        required link VertexGeometry -> IfcPoint;
    }

    type IfcActorSelect {
        link IfcActorSelect -> IfcOrganization | IfcPerson | IfcPersonAndOrganization;
    }

    type IfcAlignment2DVerSegCircularArc extending IfcAlignment2DVerticalSegment {
        required property Radius -> float64;
        required property IsConvex -> bool;
    }

    type IfcAlignment2DVerSegLine extending IfcAlignment2DVerticalSegment {
    }

    type IfcAlignment2DVerSegParabolicArc extending IfcAlignment2DVerticalSegment {
        required property ParabolaConstant -> float64;
        required property IsConvex -> bool;
    }

    type IfcAlignment2DVertical extending IfcGeometricRepresentationItem {
        required multi link Segments -> IfcAlignment2DVerticalSegment;
    }

    type IfcArbitraryOpenProfileDef extending IfcProfileDef {
        required link Curve -> IfcBoundedCurve;
    }

    type IfcArbitraryProfileDefWithVoids extending IfcArbitraryClosedProfileDef {
        required multi link InnerCurves -> IfcCurve;
    }

    abstract type IfcBSplineCurve extending IfcBoundedCurve {
        required property Degree -> int64;
        required multi link ControlPointsList -> IfcCartesianPoint;
        required property CurveForm -> str {
            constraint one_of ('CIRCULAR_ARC','ELLIPTIC_ARC','HYPERBOLIC_ARC','PARABOLIC_ARC','POLYLINE_FORM','UNSPECIFIED');
        };
        required property ClosedCurve -> bool;
        required property SelfIntersect -> bool;
    }

    type IfcBoundingBox extending IfcGeometricRepresentationItem {
        required link Corner -> IfcCartesianPoint;
        required property XDim -> float64;
        required property YDim -> float64;
        required property ZDim -> float64;
    }

    abstract type IfcCartesianTransformationOperator extending IfcGeometricRepresentationItem {
        link Axis1 -> IfcDirection;
        link Axis2 -> IfcDirection;
        required link LocalOrigin -> IfcCartesianPoint;
        property Scale -> float64;
    }

    type IfcCompositeCurve extending IfcBoundedCurve {
        required multi link Segments -> IfcCompositeCurveSegment;
        required property SelfIntersect -> bool;
    }

    abstract type IfcCurveSegment2D extending IfcBoundedCurve {
        required link StartPoint -> IfcCartesianPoint;
        required property StartDirection -> float64;
        required property SegmentLength -> float64;
    }

    type IfcCurveStyleFontAndScaling extending IfcPresentationItem {
        property Name -> str;
        required link CurveFont -> IfcCurveStyleFontSelect;
        required property CurveFontScaling -> float64;
    }

    type IfcEdgeCurve extending IfcEdge {
        required link EdgeGeometry -> IfcCurve;
        required property SameSense -> bool;
    }

    type IfcFace extending IfcTopologicalRepresentationItem {
        required multi link Bounds -> IfcFaceBound;
    }

    type IfcFaceOuterBound extending IfcFaceBound {
    }

    type IfcFillAreaStyleTiles extending IfcGeometricRepresentationItem {
        required multi link TilingPattern -> IfcVector;
        required property TilingScale -> float64;
    }

    type IfcGeometricSet extending IfcGeometricRepresentationItem {
        required multi link Elements -> IfcGeometricSetSelect;
    }

    type IfcHatchLineDistanceSelect {
        link IfcHatchLineDistanceSelect -> IfcPositiveLengthMeasure | IfcVector;
    }

    type IfcIndexedPolyCurve extending IfcBoundedCurve {
        required link Points -> IfcCartesianPointList;
        multi link Segments -> IfcSegmentIndexSelect;
        property SelfIntersect -> bool;
    }

    type IfcIndexedPolygonalFaceWithVoids extending IfcIndexedPolygonalFace {
        required property InnerCoordIndices -> array<tuple<int64, int64, int64>>;
    }

    type IfcLightSourceAmbient extending IfcLightSource {
    }

    type IfcLightSourceDirectional extending IfcLightSource {
        required link Orientation -> IfcDirection;
    }

    type IfcLightSourcePositional extending IfcLightSource {
        required link Position -> IfcCartesianPoint;
        required property Radius -> float64;
        required property ConstantAttenuation -> float64;
        required property DistanceAttenuation -> float64;
        required property QuadricAttenuation -> float64;
    }

    type IfcLine extending IfcCurve {
        required link Pnt -> IfcCartesianPoint;
        required link Dir -> IfcVector;
    }

    type IfcMaterialLayerSetUsage extending IfcMaterialUsageDefinition {
        required link ForLayerSet -> IfcMaterialLayerSet;
        required property LayerSetDirection -> str {
            constraint one_of ('AXIS1','AXIS2','AXIS3');
        };
        required property DirectionSense -> str {
            constraint one_of ('NEGATIVE','POSITIVE');
        };
        required property OffsetFromReferenceLine -> float64;
        property ReferenceExtent -> float64;
    }

    type IfcMaterialProfileSetUsage extending IfcMaterialUsageDefinition {
        required link ForProfileSet -> IfcMaterialProfileSet;
        property CardinalPoint -> int64;
        property ReferenceExtent -> float64;
    }

    type IfcOffsetCurve2D extending IfcOffsetCurve {
        required property Distance -> float64;
        required property SelfIntersect -> bool;
    }

    type IfcOffsetCurve3D extending IfcOffsetCurve {
        required property Distance -> float64;
        required property SelfIntersect -> bool;
        required link RefDirection -> IfcDirection;
    }

    type IfcOffsetCurveByDistances extending IfcOffsetCurve {
        required multi link OffsetValues -> IfcDistanceExpression;
        property Tag -> str;
    }

    type IfcOrientedEdge extending IfcEdge {
        required link EdgeElement -> IfcEdge;
        required property Orientation -> bool;
    }

    type IfcOwnerHistory  {
        required link OwningUser -> IfcPersonAndOrganization;
        required link OwningApplication -> IfcApplication;
        property State -> str {
            constraint one_of ('LOCKED','READONLY','READONLYLOCKED','READWRITE','READWRITELOCKED');
        };
        property ChangeAction -> str {
            constraint one_of ('ADDED','DELETED','MODIFIED','NOCHANGE','NOTDEFINED');
        };
        property LastModifiedDate -> int64;
        link LastModifyingUser -> IfcPersonAndOrganization;
        link LastModifyingApplication -> IfcApplication;
        required property CreationDate -> int64;
    }

    abstract type IfcPlacement extending IfcGeometricRepresentationItem {
        required link Location -> IfcCartesianPoint;
    }

    type IfcPointOrVertexPoint {
        link IfcPointOrVertexPoint -> IfcPoint | IfcVertexPoint;
    }

    type IfcPolyLoop extending IfcLoop {
        required multi link Polygon -> IfcCartesianPoint;
    }

    type IfcPolyline extending IfcBoundedCurve {
        required multi link Points -> IfcCartesianPoint;
    }

    type IfcPresentationLayerWithStyle extending IfcPresentationLayerAssignment {
        required property LayerOn -> bool;
        required property LayerFrozen -> bool;
        required property LayerBlocked -> bool;
        required multi link LayerStyles -> IfcPresentationStyle;
    }

    type IfcRectangularTrimmedSurface extending IfcBoundedSurface {
        required link BasisSurface -> IfcSurface;
        required property U1 -> float64;
        required property V1 -> float64;
        required property U2 -> float64;
        required property V2 -> float64;
        required property Usense -> bool;
        required property Vsense -> bool;
    }

    type IfcReparametrisedCompositeCurveSegment extending IfcCompositeCurveSegment {
        required property ParamLength -> float64;
    }

    type IfcSectionedSolidHorizontal extending IfcSectionedSolid {
        required multi link CrossSectionPositions -> IfcDistanceExpression;
        required property FixedAxisVertical -> bool;
    }

    type IfcStructuralLoadSingleDisplacementDistortion extending IfcStructuralLoadSingleDisplacement {
        property Distortion -> float64;
    }

    type IfcStructuralLoadSingleForceWarping extending IfcStructuralLoadSingleForce {
        property WarpingMoment -> float64;
    }

    type IfcSubedge extending IfcEdge {
        required link ParentEdge -> IfcEdge;
    }

    type IfcSurfaceCurve extending IfcCurve {
        required link Curve3D -> IfcCurve;
        required multi link AssociatedGeometry -> IfcPcurve;
        required property MasterRepresentation -> str {
            constraint one_of ('CURVE3D','PCURVE_S1','PCURVE_S2');
        };
    }

    type IfcSurfaceStyleRendering extending IfcSurfaceStyleShading {
        link DiffuseColour -> IfcColourOrFactor;
        link TransmissionColour -> IfcColourOrFactor;
        link DiffuseTransmissionColour -> IfcColourOrFactor;
        link ReflectionColour -> IfcColourOrFactor;
        link SpecularColour -> IfcColourOrFactor;
        link SpecularHighlight -> IfcSpecularHighlightSelect;
        required property ReflectanceMethod -> str {
            constraint one_of ('BLINN','FLAT','GLASS','MATT','METAL','MIRROR','NOTDEFINED','PHONG','PLASTIC','STRAUSS');
        };
    }

    type IfcSweptDiskSolidPolygonal extending IfcSweptDiskSolid {
        property FilletRadius -> float64;
    }

    abstract type IfcTessellatedFaceSet extending IfcTessellatedItem {
        required link Coordinates -> IfcCartesianPointList3D;
    }

    type IfcTextStyleForDefinedFont extending IfcPresentationItem {
        required link Colour -> IfcColour;
        link BackgroundColour -> IfcColour;
    }

    type IfcTrimmingSelect {
        link IfcTrimmingSelect -> IfcCartesianPoint | IfcParameterValue;
    }

    type IfcUnit {
        link IfcUnit -> IfcDerivedUnit | IfcMonetaryUnit | IfcNamedUnit;
    }

    type IfcVectorOrDirection {
        link IfcVectorOrDirection -> IfcDirection | IfcVector;
    }

    type IfcVirtualGridIntersection  {
        required multi link IntersectingAxes -> IfcGridAxis;
        required property OffsetDistances -> array<float64>{
            constraint expression on (len(__subject__) = 2 or len(__subject__) = 3)
        };
    }

    type List_of_IfcCartesianPoint { required multi link IfcCartesianPoints -> IfcCartesianPoint }

    type IfcAlignment2DHorizontalSegment extending IfcAlignment2DSegment {
        required link CurveGeometry -> IfcCurveSegment2D;
    }

    type IfcApproval  {
        property Identifier -> str;
        property Name -> str;
        property Description -> str;
        property TimeOfApproval -> str;
        property Status -> str;
        property Level -> str;
        property Qualifier -> str;
        link RequestingApproval -> IfcActorSelect;
        link GivingApproval -> IfcActorSelect;
    }

    type IfcAxis1Placement extending IfcPlacement {
        link Axis -> IfcDirection;
    }

    type IfcAxis2Placement2D extending IfcPlacement {
        link RefDirection -> IfcDirection;
    }

    type IfcAxis2Placement3D extending IfcPlacement {
        link Axis -> IfcDirection;
        link RefDirection -> IfcDirection;
    }

    type IfcBSplineCurveWithKnots extending IfcBSplineCurve {
        required property KnotMultiplicities -> tuple<int64, int64>;
        required property Knots -> tuple<float64, float64>;
        required property KnotSpec -> str {
            constraint one_of ('PIECEWISE_BEZIER_KNOTS','QUASI_UNIFORM_KNOTS','UNIFORM_KNOTS','UNSPECIFIED');
        };
    }

    abstract type IfcBSplineSurface extending IfcBoundedSurface {
        required property UDegree -> int64;
        required property VDegree -> int64;
        required multi link ControlPointsList -> List_of_IfcCartesianPoint;
        required property SurfaceForm -> str {
            constraint one_of ('CONICAL_SURF','CYLINDRICAL_SURF','GENERALISED_CONE','PLANE_SURF','QUADRIC_SURF','RULED_SURF','SPHERICAL_SURF','SURF_OF_LINEAR_EXTRUSION','SURF_OF_REVOLUTION','TOROIDAL_SURF','UNSPECIFIED');
        };
        required property UClosed -> bool;
        required property VClosed -> bool;
        required property SelfIntersect -> bool;
    }

    type IfcBoxedHalfSpace extending IfcHalfSpaceSolid {
        required link Enclosure -> IfcBoundingBox;
    }

    type IfcCartesianTransformationOperator2D extending IfcCartesianTransformationOperator {
    }
}